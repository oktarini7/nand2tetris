// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM512(in=in,load=load1RAM512,address=address[0..8],out=out1RAM512);
    RAM512(in=in,load=load2RAM512,address=address[0..8],out=out2RAM512);
    RAM512(in=in,load=load3RAM512,address=address[0..8],out=out3RAM512);
    RAM512(in=in,load=load4RAM512,address=address[0..8],out=out4RAM512);
    RAM512(in=in,load=load5RAM512,address=address[0..8],out=out5RAM512);
    RAM512(in=in,load=load6RAM512,address=address[0..8],out=out6RAM512);
    RAM512(in=in,load=load7RAM512,address=address[0..8],out=out7RAM512);
    RAM512(in=in,load=load8RAM512,address=address[0..8],out=out8RAM512);
    DMux8Way(in=load,sel=address[9..11],a=load1RAM512,b=load2RAM512,c=load3RAM512,d=load4RAM512,e=load5RAM512,f=load6RAM512,g=load7RAM512,h=load8RAM512);
    Mux8Way16(a=out1RAM512,b=out2RAM512,c=out3RAM512,d=out4RAM512,e=out5RAM512,f=out6RAM512,g=out7RAM512,h=out8RAM512,sel=address[9..11],out=out);
}